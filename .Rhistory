getwd()
instal.packages("flexdashboard")
install.packages("flexdashboard")
install.packages("flexdashboard")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("formatR")
install.packages("formatR")
# Chunk 1
knitr::opts_chunk$set(cache = TRUE)
require(dplyr)
require(viridisLite)
require(ggplot2)
require(plotly)
require(tidyverse)
require(rgdal)
require(sp)
require(leaflet)
require(magrittr)
require(maptools)
require(rgeos)
require(RColorBrewer)
require(maptools)
require(devtools)
require(flexdashboard)
require(shiny)
require(DT)
#setwd("C:/Users/cguedenet/OneDrive/1. Documents/IREX Global Measurement/cleaning & analysis/Q2data")
##read in project data
maptest<-read.csv("maptest.csv",header=TRUE)
dashtest<-read.csv("dashtest.csv",header=TRUE)
list<-c("program", "country","FY","period","indicator number","disaggregation","disaggregation value","timing","noData","results","practice area")
names(dashtest)<-list
dashtest2<-dashtest %>% filter(disaggregation=="a. Country") %>% .[,c(1,2,3,4,5,10,11)]
# Chunk 2
selectInput("practice area", label="Practice Area", choices=unique(dashtest2$`practice area`))
selectInput("indicator number", label="Indicator Number", choices=sort(unique(dashtest2$`indicator number`)))
selectInput("country", label="Country", choices=unique(dashtest2$country))
# Chunk 3
# Chunk 4
datatable(dashtest, options = list(pageLength = 10))
# Chunk 5: global
## Read in Map Data
#setwd("C:/Users/cguedenet/OneDrive/1. Documents/IREX Global Measurement/cleaning & analysis/Q2data")
##read in project data
maptest<-read.csv("maptest.csv",header=TRUE)
setwd("world borders")
world<-readOGR("TM_WORLD_BORDERS-0.3.shp")
worldC<-data.frame(world@data$NAME)
names(worldC)<-"country"
worldC$country<-as.character(worldC$country)
# merge csv with shapefile
combined <- merge(world, maptest, by.x = "NAME", by.y="country")
head(combined@data)
#create palettes for polygons
#define color ramp and means of classifying data; Y1Gn is a color pallete; n is equal to number of bins
pal2<- colorNumeric(palette = brewer.pal(3,"Blues"), domain = combined$X2.A, na.color = "#F5F5F3")
pal3<-colorBin(palette = brewer.pal(3,"PuBu"), domain = combined$X2.A,bins=c(0,1,7))
pal4<-brewer.pal(3,"PuBu")
#create map popups
popup1=paste0("country :",combined$NAME,"<br>Leaders: ",combined$X2.A)
popup2=paste0("institutions :",combined$X3.A)
#create map and put it all together
sfmap<-leaflet() %>% addProviderTiles("CartoDB.PositronNoLabels") %>%
addPolygons(data=combined, stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1, fillColor = pal3(combined$X2.A),popup=popup1) %>%
addPolylines(data = combined, weight = .5, color = "grey") %>%
addLegend("bottomright", colors=pal4, labels=c("0","1","7"), title="Number of leaders", opacity=0.6) %>%
setView(lng=median(combined$LON),lat=median(combined$LAT),zoom=2)
renderPrint(sfmap)
# Chunk 6
# Chunk 7
# Chunk 1
knitr::opts_chunk$set(cache = TRUE)
require(dplyr)
require(viridisLite)
require(ggplot2)
require(plotly)
require(tidyverse)
require(rgdal)
require(sp)
require(leaflet)
require(magrittr)
require(maptools)
require(rgeos)
require(RColorBrewer)
require(maptools)
require(devtools)
require(flexdashboard)
require(shiny)
require(DT)
#setwd("C:/Users/cguedenet/OneDrive/1. Documents/IREX Global Measurement/cleaning & analysis/Q2data")
##read in project data
maptest<-read.csv("maptest.csv",header=TRUE)
dashtest<-read.csv("dashtest.csv",header=TRUE)
list<-c("program", "country","FY","period","indicator number","disaggregation","disaggregation value","timing","noData","results","practice area")
names(dashtest)<-list
dashtest2<-dashtest %>% filter(disaggregation=="a. Country") %>% .[,c(1,2,3,4,5,10,11)]
# Chunk 2
selectInput("practice area", label="Practice Area", choices=unique(dashtest2$`practice area`))
selectInput("indicator number", label="Indicator Number", choices=sort(unique(dashtest2$`indicator number`)))
selectInput("country", label="Country", choices=unique(dashtest2$country))
# Chunk 3
# Chunk 4
datatable(dashtest, options = list(pageLength = 10))
# Chunk 5: global
## Read in Map Data
#setwd("C:/Users/cguedenet/OneDrive/1. Documents/IREX Global Measurement/cleaning & analysis/Q2data")
##read in project data
maptest<-read.csv("maptest.csv",header=TRUE)
setwd("world borders")
world<-readOGR("TM_WORLD_BORDERS-0.3.shp")
worldC<-data.frame(world@data$NAME)
names(worldC)<-"country"
worldC$country<-as.character(worldC$country)
# merge csv with shapefile
combined <- merge(world, maptest, by.x = "NAME", by.y="country")
head(combined@data)
#create palettes for polygons
#define color ramp and means of classifying data; Y1Gn is a color pallete; n is equal to number of bins
pal2<- colorNumeric(palette = brewer.pal(3,"Blues"), domain = combined$X2.A, na.color = "#F5F5F3")
pal3<-colorBin(palette = brewer.pal(3,"PuBu"), domain = combined$X2.A,bins=c(0,1,7))
pal4<-brewer.pal(3,"PuBu")
#create map popups
popup1=paste0("country :",combined$NAME,"<br>Leaders: ",combined$X2.A)
popup2=paste0("institutions :",combined$X3.A)
#create map and put it all together
sfmap<-leaflet() %>% addProviderTiles("CartoDB.PositronNoLabels") %>%
addPolygons(data=combined, stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1, fillColor = pal3(combined$X2.A),popup=popup1) %>%
addPolylines(data = combined, weight = .5, color = "grey") %>%
addLegend("bottomright", colors=pal4, labels=c("0","1","7"), title="Number of leaders", opacity=0.6) %>%
setView(lng=median(combined$LON),lat=median(combined$LAT),zoom=2)
renderPrint(sfmap)
# Chunk 6
# Chunk 7
getwd()
setwd("code/irex_dashboard/irex_dashboard/")
list.files()
file1 <- read.csv("sfTest.csv",header=TRUE)
head(file1)
file2 <- subset(file1,disaggregation=="c. Youth/Adult")
names(file2)
sort(unique(file2$disaggregation.value))
file3 <- subset(file1,disaggregation=="e. Undeserved Group")
sort(unique(file3$disaggregation.value))
file3 <- subset(file1,disaggregation=="e. Underserved Group")
sort(unique(file3$disaggregation.value))
file4 <- subset(file1,disaggregation=="f. Location")
sort(unique(file4$disaggregation.value))
file5 <- subset(file1,disaggregation=="g. Type of Education/Employment Status Change")
sort(unique(file5$disaggregation.value))
file6 <- subset(file1,disaggregation=="h. Intensity of Intervention")
sort(unique(file6$disaggregation.value))
file7 <- subset(file1,disaggregation=="i. Number Employers Engaged in Following Ways")
sort(unique(file7$disaggregation.value))
file8 <- subset(file1,disaggregation=="j. Employer Type")
sort(unique(file8$disaggregation.value))
file9 <- subset(file1,disaggregation=="k. Leader Type")
sort(unique(file9$disaggregation.value))
file10 <- subset(file1,disaggregation=="l. Collaboration Type")
sort(unique(file10$disaggregation.value))
file11 <- subset(file1,disaggregation=="m. Institution Type")
sort(unique(file11$disaggregation.value))
file12 <- subset(file1,disaggregation=="Media Type")
sort(unique(file12$disaggregation.value))
file13 <- subset(file1,disaggregation=="n. Media Partner Type")
sort(unique(file13$disaggregation.value))
file14 <- subset(file1,disaggregation=="o. Educator Institution Type")
sort(unique(file14$disaggregation.value))
file15 <- subset(file1,disaggregation=="p. Employer engaged by IREX/partner")
sort(unique(file15$disaggregation.value))
